/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hyperlinks;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/**
 *
 * @author owner
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    int threadsNumber;
    public static long allLinks = 0;
    public static long sumOfValideLinks = 0;

    long start;
    long end;
    long elapsedTime;
    long totalLinks = 0;

    public Menu(int threads) {
        initComponents();
        this.threadsNumber = threads;
        System.out.println("No of threads from jFrame class " + this.threadsNumber);
        start = System.currentTimeMillis();

    }

    public static boolean isValid(String url) {
        /* Try creating a valid URL */
        allLinks++;
        try {
            new URL(url).toURI();
            sumOfValideLinks++;
            return true;
        } // If there was an Exception
        // while creating URL object
        catch (Exception e) {
            return false;
        }
    }

    public ArrayList<ArrayList<String>> split(ArrayList<String> list, int n) {
        ArrayList<ArrayList<String>> resultArrays = new ArrayList<>();
        int pivot = 0;

        // Creates n ArrayLists.
        for (int i = 0; i < n; i++) {
            resultArrays.add(new ArrayList<>());
        }

        // Add element from list to new ArrayLists.
        while (pivot != list.size()) {
            int p = pivot % n;
            resultArrays.get(p).add(list.get(pivot));
            pivot++;
        }

        return resultArrays;
    }

    public void getFirstLinks(String url, int depth) {

        Document doc1 = null;
        Elements links = null;
        ArrayList<String> valideLinks = new ArrayList<String>();

        try {
            doc1 = Jsoup.connect(url).get();
            links = doc1.select("a[href]");

            for (Iterator<Element> it = links.iterator(); it.hasNext();) {
                Element link = it.next();
                if (isValid(link.attr("abs:href"))) {
                    System.out.println(link.attr("abs:href"));
                    valideLinks.add(link.attr("abs:href"));
                }

            }

            //decrease the depth by 1
            int d = depth - 1;
            if (d >= 1) {

                //Split the array to the numbers of threads:
                ArrayList<ArrayList<String>> splittedLinks = new ArrayList<ArrayList<String>>();
                splittedLinks = split(valideLinks, this.threadsNumber);

                //****** Create the threads dynimacally ***** ///
                Thread[] threadArray = new Thread[this.threadsNumber];
                this.sumOfValideLinks = valideLinks.size();
                for (int i = 0; i < this.threadsNumber; i++) {
                    threadArray[i] = new Thread(new ProgramThreads(splittedLinks.get(i), d));
                    threadArray[i].start();
                    System.out.println("Thread " + i + " done");
                }

                // Let the threads run concurrently,
                // and wait for them to finish in a second loop
                for (int i = 0; i < this.threadsNumber; i++) {
                    try {
                        threadArray[i].join();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

            }

        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        urlLink = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        depthInput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Web Scraping");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("URL:");

        urlLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlLinkActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Depth:");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Scrap now");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(depthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(urlLink, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel1)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urlLink, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(depthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urlLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlLinkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlLinkActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (urlLink.getText().isEmpty() || depthInput.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Please enter all fields !!");

        } else {
            String url = urlLink.getText();

            int depth = Integer.parseInt(depthInput.getText());
            if (depth <= 0) {
                depth = 1;
            }
            getFirstLinks(url, depth);
        }

        this.end = System.currentTimeMillis();
        this.elapsedTime = end - start;
        System.out.println("Program time = " + elapsedTime + " milli-seconds");
        System.out.println("TOTAL NUMBER OF VALID LINKS = " + this.sumOfValideLinks);

        new OutputFrame(threadsNumber, this.sumOfValideLinks, this.allLinks, this.elapsedTime).setVisible(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu(threadsNumber).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField depthInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField urlLink;
    // End of variables declaration//GEN-END:variables
}
